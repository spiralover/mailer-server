version: '3.8'

services:
  user-service:
    container_name: mailer-user-service
    restart: always
    build:
      context: .
      dockerfile: apps/user/Dockerfile
    env_file:
      - .env
      - apps/user/.env
    environment:
      DB_HOST: "database"
      DB_PORT: "${DB_PORT}"
    volumes:
      - "/spiralover/mailer/uploads:/var/www/mailer/static/uploads"
    ports:
      - "${DOCKER_DNS_PREFIX}.1:4401:4401"
    networks:
      - mailer-main
    extra_hosts:
      - host.docker.internal:host-gateway
    depends_on:
      - database
      - redis
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://user-service:4401/system/docker-health-check" ]
      interval: 1m30s
      timeout: 5s
      retries: 3
      start_period: 30s

  executor-service:
    container_name: mailer-executor-service
    restart: always
    build:
      context: .
      dockerfile: apps/executor/Dockerfile
    env_file:
      - .env
      - apps/executor/.env
    environment:
      DB_HOST: "database"
      DB_PORT: "${DB_PORT}"
    ports:
      - "${DOCKER_DNS_PREFIX}.1:4402:4402"
    networks:
      - mailer-main
    extra_hosts:
      - host.docker.internal:host-gateway
    depends_on:
      - database
      - redis
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://executor-service:4402/system/docker-health-check" ]
      interval: 1m30s
      timeout: 5s
      retries: 3
      start_period: 30s

  database:
    container_name: mailer-database
    restart: always
    image: postgres:16.1-alpine3.18
    environment:
      PGPORT: "${DB_PORT}"
      POSTGRES_DB: "${DB_DATABASE}"
      POSTGRES_USER: "${DB_USERNAME}"
      POSTGRES_PASSWORD: "${DB_PASSWORD}"
    volumes:
      - "/spiralover/mailer/postgresql/data:/var/lib/postgresql/data"
    env_file:
      - .env
    ports:
      - "${DOCKER_DNS_PREFIX}.1:${DB_PORT}:${DB_PORT}"
    networks:
      - mailer-main
    dns:
      - "${DOCKER_DNS_PREFIX}.254"
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -U ${DB_USERNAME} -d ${DB_DATABASE}'" ]
      interval: 1m30s
      timeout: 5s
      retries: 3
      start_period: 30s

  redis:
    image: redis:7.2-alpine3.18
    container_name: mailer-redis
    restart: always
    env_file:
      - .env
    volumes:
      - "/spiralover/mailer/redis/data:/data"
    networks:
      - mailer-main
    dns:
      - "${DOCKER_DNS_PREFIX}.254"
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: 1m30s
      timeout: 5s
      retries: 3
      start_period: 30s
    command: "redis-server --loglevel warning --port ${REDIS_PORT}"

networks:
  mailer-main:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: "${DOCKER_DNS_PREFIX}.0/24"